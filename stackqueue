주식 가격 O(n)
상승기간 출력하기

def solution(prices):
    answer = [0 for _ in range(len(prices))]
    s = list()

    for i in range(len(prices)):
        while (len(s) != 0 and prices[s[-1]]> prices[i]):
            answer[s[-1]]=i-s[-1]
            s.pop()
        s.append(i)

    for i in range(len(prices)):
        if answer[i]==0:
            answer[i]=len(prices)-i-1
    return answer
    
기능 개발
zip([1,2,3],[a, b,c])=>[1, a], [2, b], [3, c]
import math
def solution(progresses, speeds):
    stack=list()
    
    for p, s in zip(progresses, speeds):
        if len(stack)==0 or stack[-1][0]<math.ceil((100-p)/s):
            stack.append([math.ceil((100-p)/s), 1])
        else:
            stack[-1][1]+=1
            
    return [s[1] for s in stack]
    
    
다리를 지나는 트럭
from collections import deque
def solution(bridge_length, weight, truck_weights):
    b = deque();
    w = 0;
    cnt = 1;
    for t in truck_weights:
        while (w + t > weight or (len(b)!=0 and b[0][1]+bridge_length==cnt)):
            truck, tcnt = b.popleft()
            w = w - truck
            cnt = tcnt + bridge_length

        b.append([t, cnt])
        w += t
        cnt += 1

    return b[-1][1] + bridge_length


프린터
from collections import deque
def solution(priorities, location):
    idx=deque([i for i in range(len(priorities))])
    priorities=deque(priorities)

    j=0
    while True:

        cur=priorities[0]
        curidx=idx[0]
        chk=True
        if cur<max(priorities):
            priorities.popleft()
            priorities.append(cur)
            idx.popleft()
            idx.append(curidx)

        else:
            priorities.popleft()
            printidx=idx.popleft()
            j+=1
            if printidx==location:
                return j
